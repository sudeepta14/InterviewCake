import org.junit.Test;
import org.junit.runner.JUnitCore;
import org.junit.runner.Result;
import org.junit.runner.notification.Failure;

import static org.junit.Assert.*;

public class Solution {

    public static int findRepeat(int[] theArray) {

        // find a number that appears more than once
       int floor = 1;
       int ceiling = theArray.length -1;
       while(floor<ceiling){
           int midpoint = floor + ((ceiling - floor )/2);
           int lowerRangeFloor = floor;
           int lowerRangeCeiling = midpoint;
           int upperRangeFloor = midpoint+1;
           int upperRangeCeiling = ceiling;
           
           
           int itemsInLowerRange = 0;
           for(int item: theArray){
               if(item >= lowerRangeFloor && item <= lowerRangeCeiling){
                   itemsInLowerRange+=1;
               }
           }
           
            int distinctNumberInRange = lowerRangeCeiling - lowerRangeFloor +1;
            if(itemsInLowerRange > distinctNumberInRange){
                floor = lowerRangeFloor;
                ceiling = lowerRangeCeiling;
            }else{
                floor = upperRangeFloor;
                ceiling = upperRangeCeiling;
            }
       }
        return floor;
    }
















    // tests

    @Test
    public void justTheRepeatedNumberTest() {
        final int[] numbers = {1, 1};
        final int expected = 1;
        final int actual = findRepeat(numbers);
        assertEquals(expected, actual);
    }

    @Test
    public void shortArrayTest() {
        final int[] numbers = {1, 2, 3, 2};
        final int expected = 2;
        final int actual = findRepeat(numbers);
        assertEquals(expected, actual);
    }

    @Test
    public void mediumArrayTest() {
        final int[] numbers = {1, 2, 5, 5, 5, 5};
        final int expected = 5;
        final int actual = findRepeat(numbers);
        assertEquals(expected, actual);
    }

    @Test
    public void longArrayTest() {
        final int[] numbers = {4, 1, 4, 8, 3, 2, 7, 6, 5};
        final int expected = 4;
        final int actual = findRepeat(numbers);
        assertEquals(expected, actual);
    }

    public static void main(String[] args) {
        Result result = JUnitCore.runClasses(Solution.class);
        for (Failure failure : result.getFailures()) {
            System.out.println(failure.toString());
        }
        if (result.wasSuccessful()) {
            System.out.println("All tests passed.");
        }
    }
}
