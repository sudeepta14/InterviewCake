class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        
        int n = s.length();
        if(n<3){
            return n;
        }
        HashMap<Character, Integer> map = new HashMap<>();
        int max_len = 2;
        int left = 0, right = 0;
        while(right<n){
        if(map.size()<3){
            map.put(s.charAt(right), right++);
        }
        if(map.size()==3){
            int del_index = Collections.min(map.values());
            map.remove(s.charAt(del_index));
            left = del_index+1;
        }
        max_len = Math.max(max_len, right-left);
        }
        return max_len;
    }
}

Space Complexity : O(N)
Time Complexity : O(N) -- Length of the string. 
